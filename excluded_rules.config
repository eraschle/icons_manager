{
    "rules": {
        "equals": "Is the attribute value equals with a rule value",
        "not_equals": "Is the attribute value NOT equals with a rule value",
        "starts_with": "Does the attribute value starts a the rule value",
        "ends_with": "Does the attribute value ends with a rule value",
        "start_or_ends_with": "Does the attribute value start or ends with a rule value",
        "contains": "Does the attribute value contains in the rule values",
        "not_contains": "Does the attribute value NOT contains in the rule values",
        "chained": "Does the attribute value NOT contains in the rule values",
        "contains_files": "Does files with the EXTENSIONS (rule values) exists"
    },
    "template": {
        "operator": "'any' or 'all' rule values must be TRUE >> default: all",
        "path": {
            "operator": "'any' or 'all' rules must be TRUE >> default: any",
            "rules": [
                {
                    "rule_to_apply": [
                        "Values for the rule to check"
                    ],
                    "operator": "'any' or 'all' rule values must be TRUE >> default: any",
                    "case_sensitive": "'true' or 'false' for rule >> default: false",
                    "level": "'Only for contains_extension >> default: 1",
                    "before_or_after": "true if the values from app config should to be taken, otherwise false",
                    "before_or_after_values": [
                        "If other values than in the app config should be used"
                    ]
                }
            ]
        },
        "name": {
            "operator": "'any' or 'all' rules must be TRUE >> default: any",
            "rules": [
                {
                    "rule_to_apply": [
                        "Values for the rule to check"
                    ],
                    "operator": "'any' or 'all' rule values must be TRUE >> default: any",
                    "case_sensitive": "'true' or 'false' for rule >> default: false",
                    "before_or_after": "true if the values from app config should to be taken, otherwise false",
                    "before_or_after_values": [
                        "If other values than in the app config should be used"
                    ]
                }
            ]
        }
    },
    "config": [
        {
            "parent_name": {
                "rules": [
                    {
                        "equals": [
                            "RSRG"
                        ]
                    }
                ]
            },
            "name": {
                "rules": [
                    {
                        "equals": [
                            "RSRG"
                        ]
                    }
                ]
            }
        },
        {
            "parent_path": {
                "rules": [
                    {
                        "starts_with": [
                            "C:\\workspace"
                        ]
                    }
                ]
            },
            "name": {
                "rules": [
                    {
                        "equals": [
                            "projects"
                        ]
                    }
                ]
            }
        },
        {
            "path": {
                "rules": []
            },
            "parent_name": {
                "rules": [
                    {
                        "equals": [
                            "bkp",
                            "backup",
                            "backups",
                            "temp",
                            "Alt",
                            "old",
                            "Archiv",
                            "archive"
                        ],
                        "operator": "any",
                        "before_or_after": true,
                        "before_or_after_values": [
                            "x"
                        ]
                    }
                ]
            }
        },
        {
            "path": {
                "rules": []
            },
            "name": {
                "rules": [
                    {
                        "equals": [
                            "datasets",
                            "data"
                        ],
                        "operator": "any",
                        "before_or_after": true
                    }
                ]
            }
        },
        {
            "path": {
                "rules": []
            },
            "name": {
                "rules": [
                    {
                        "equals": [
                            "Bibliothek",
                            "Bauteile"
                        ],
                        "operator": "any",
                        "before_or_after": true
                    }
                ]
            }
        },
        {
            "path": {
                "rules": []
            },
            "name": {
                "rules": [
                    {
                        "chained": [
                            {
                                "equals": [
                                    "AmWa"
                                ],
                                "operator": "any",
                                "before_or_after": true
                            },
                            {
                                "contains": [
                                    "Amstein",
                                    "Walthert"
                                ],
                                "operator": "all"
                            },
                            {
                                "start_or_ends_with": [
                                    "AWH"
                                ],
                                "before_or_after": true
                            }
                        ],
                        "operator": "any",
                        "before_or_after": true
                    }
                ]
            }
        },
        {
            "path": {
                "rules": [
                    {
                        "contains": [
                            "Autodesk",
                            "APIs"
                        ],
                        "operator": "all"
                    },
                    {
                        "chained": [
                            {
                                "contains": [
                                    "Autodesk",
                                    "Dokumente"
                                ],
                                "operator": "all"
                            },
                            {
                                "contains": [
                                    "Events",
                                    "Navis",
                                    "Revit"
                                ],
                                "operator": "any"
                            }
                        ],
                        "operator": "all"
                    }
                ]
            },
            "name": {
                "rules": []
            }
        }
    ]
}